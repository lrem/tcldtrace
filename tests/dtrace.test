#!/usr/bin/tclsh

if {[lsearch [namespace children] ::tcltest] == -1} {
	package require tcltest
	namespace import ::tcltest::*
}

package require dtrace

# Tests not requiring root {{{

# {{{ ::dtrace::open

test "open-1.1" "bad value for instrument" {
	list [catch {::dtrace::open abc} result] $result
} {1 {expected boolean value but got "abc"
::dtrace::open bad usage}}

test "open-1.2" "bad option name" {
	list [catch {::dtrace::open -fooshmoo 1 0} result] $result
} {1 {::dtrace::open bad option initialization -fooshmoo}}

test "open-1.3" "bad option value" {
	list [catch {::dtrace::open -bufsize abc 0} result] $result
} {1 {::dtrace::open bad option initialization -bufsize}}

# }}}

# ::dtrace::close {{{

test "close-1.1" "too few arguments for close" {
	list [catch {::dtrace::close} result] $result
} {1 {wrong # args: should be "::dtrace::close handle"}}

test "close-1.2" "too much arguments for close" {
	list [catch {::dtrace::close abc def} result] $result
} {1 {wrong # args: should be "::dtrace::close handle"}}

test "close-1.3" "closing invalid handle" {
	list [catch {::dtrace::close 1} result] $result
} {1 {::dtrace::close bad handle}}

# }}}

# ::dtrace::configure {{{

test "configure-1.1" "too few arguments for configure" {
	list [catch {::dtrace::configure} result] $result
} {1 {wrong # args: should be "::dtrace::configure handle ?option value ...?"}}

test "configure-1.2" "too much arguments for configure" {
	list [catch {::dtrace::configure abc -bufsize 1 abc} result] $result
} {1 {wrong # args: should be "::dtrace::configure handle ?option value ...?"}}

test "configure-1.3" "configuring invalid handle" {
	list [catch {::dtrace::configure 0 -bufsize 1} result] $result
} {1 {::dtrace::configure bad handle}}

# }}}

# }}}

# Tests requiring root {{{

# }}}

cleanupTests

# vim: set foldmethod=marker:
